{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","localStorage","getItem","JSON","parse","loginData","setLoginData","handleLogin","googleData","a","fetch","method","body","stringify","token","tokenId","headers","res","json","data","setItem","className","email","onClick","removeItem","clientId","process","REACT_APP_GOOGLE_CLIENT_ID","buttonText","onSuccess","onFailure","result","alert","cookiePolicy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA4DeA,MAxDf,WAAgB,IAAD,EACqBC,mBAChCC,aAAaC,QAAQ,aACjBC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,MAJO,mBACNG,EADM,KACKC,EADL,KAWPC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACAC,MAAM,oBAAqB,CAC3CC,OAAQ,OACRC,KAAMT,KAAKU,UAAU,CACnBC,MAAON,EAAWO,UAEpBC,QAAS,CACP,eAAgB,sBAPF,cACZC,EADY,gBAWCA,EAAIC,OAXL,OAWZC,EAXY,OAYlBb,EAAaa,GACblB,aAAamB,QAAQ,YAAajB,KAAKU,UAAUM,IAb/B,2CAAH,sDAoBjB,OACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wDACA,8BACGhB,EACC,gCACE,mDAAsBA,EAAUiB,SAChC,wBAAQC,QAbC,WACnBtB,aAAauB,WAAW,aACxBlB,EAAa,OAWH,uBAGF,cAAC,IAAD,CACEmB,SAAUC,mIAAYC,2BACtBC,WAAW,qBACXC,UAAWtB,EACXuB,UAvCU,SAACC,GACrBC,MAAMD,IAuCIE,aAAc,+BCvCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca97d86b.chunk.js","sourcesContent":["import './App.css';\nimport GoogleLogin from 'react-google-login';\nimport { useState } from 'react';\n\nfunction App() {\n  const [loginData, setLoginData] = useState(\n    localStorage.getItem('loginData')\n      ? JSON.parse(localStorage.getItem('loginData'))\n      : null\n  );\n\n  const handleFailure = (result) => {\n    alert(result);\n  };\n\n  const handleLogin = async (googleData) => {\n    const res = await fetch('/api/google-login', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const data = await res.json();\n    setLoginData(data);\n    localStorage.setItem('loginData', JSON.stringify(data));\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('loginData');\n    setLoginData(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>React Google Login App</h1>\n        <div>\n          {loginData ? (\n            <div>\n              <h3>You logged in as {loginData.email}</h3>\n              <button onClick={handleLogout}>Logout</button>\n            </div>\n          ) : (\n            <GoogleLogin\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n              buttonText=\"Log in with Google\"\n              onSuccess={handleLogin}\n              onFailure={handleFailure}\n              cookiePolicy={'single_host_origin'}\n            ></GoogleLogin>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}